# (attempt at) a mkmf.template for tstorms_driver on SE3 Mazama
#  HPC.
# ... and it looks like the original authors had similar thoughts on mkmf, and instead
#  just use this as an "include" template (aka, this file is "include" imported into the
#  makefile.)
#  So this version is to be used with the compilescript. For some reason, when we try to run
#  `make` in the compile-script, it throws a bunch of errors about not being able to run
#  `nc-config`  -- apparently a parsing problem, but it works when we run from a command-line.
#  so let's just have two versions (for now).
#
#
# principal author: Mark R. Yoder, Ph.D.
#                   mryoder@stanford.edu
#
FC=ifort
LD=ifort
CC=icc
#
MPIFC=mpiifort
MPILD=mpiifort
MPICC=mpiicc
MPICXX=mpiicc
#
#
# NetCDF bits (should include hdf5 as well):
NETCDF_FFLAGS := $(shell nc-config --fflags)
NETCDF_FLIBS  := $(shell nc-config --flibs)
NETCDF_CFLAGS := $(shell nc-config --cflags)
NETCDF_CLIBS  := $(shell nc-config --libs)
#
# MPI bits:
# best, consistent ways to get these bits from the compiler???
#MPI_INC := $(shell mpif90 -showme:compiler)
#LIB_MPI := $(shell mpif90 -showme:link)
MPI_INC=$(MPI_DIR)/include
MPI_LIB=$(MPI_DIR)/lib
#
# NCO:
# We'll need to put this into a module...
#NCO_INC=${SCRATCH}/.local/intel_19_1_0_166/mpich_3_3_1/nco-4.9.2/include
#NCO_LIB=${SCRATCH}/.local/intel_19_1_0_166/mpich_3_3_1/nco-4.9.2/lib
NCO_INC=${NCO_DIR}/include
NCO_LIB=${NCO_DIR}/lib
#
# Put it together:
CPPFLAGS = -I/usr/local/include -I/usr/include $(NETCDF_CFLAGS) $(NCO_INC)
#FFLAGS = $(CPPFLAGS) -fltconsistency -stack_temps -safe_cray_ptr -ftz -i_dynamic -assume byterecl -g -i4 -r8 -O2 -nowarn -Wp,-w
FFLAGS = $(NETCDF_FFLAGS) $(NCO_INC) -I/usr/local/include -I/usr/include -fltconsistency -stack_temps -safe_cray_ptr -ftz -i_dynamic -assume byterecl -g -i4 -r8 -O2 -nowarn -Wp,-w
#
#LDFLAGS = -limf -lm -lpthread -lrt -lnetcdff -lnetcdf -lhdf5 -lhdf5_hl
LDFLAGS = -limf -lm -lpthread $(NETCDF_FLIBS)
CFLAGS = -D__IFC
#


